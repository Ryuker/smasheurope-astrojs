---
const {openText } = Astro.props;
---
<astro-modal>
  <button>{openText}</button>
  
  <dialog class="rounded-lg p-5">
  
  <slot name="main" />
  <form method="dialog">
    <slot name="close"/>
  </form>
  </dialog>
</astro-modal>


<script>
import { swapBodyElement } from "astro/virtual-modules/transitions-swap-functions.js";

  class Modal extends HTMLElement {
    connectedCallback() {
      const button = this.querySelector('button');
      const dialog = this.querySelector('dialog');
      

      if (dialog) {
        dialog.addEventListener('click', event => {
          if (event.target === dialog) {
            dialog.close();
          }
        });

        dialog.addEventListener('close', () => {
          document.body.classList.remove('lock-scroll'); 
        });
      }
      
      if (button) {
        button?.addEventListener('click', () => {
          if (dialog) {
            dialog.showModal();
            // document.body.classList('overflow', 'hidden');
            document.body.classList.add('lock-scroll');
          }
        });
      }
    }
  }

  customElements.define('astro-modal', Modal);
</script>

<style is:global>
  astro-modal dialog::backdrop {
    overscroll-behavior: contain;
  }

  .lock-scroll {
    overflow: hidden;
  }
</style>