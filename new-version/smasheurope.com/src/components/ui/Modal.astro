---
import { Icon } from 'astro-icon/components';
const {
  openText,
  icon, 
  classes = " ",
  colors = 'bg-se-blue-100 hover:bg-se-blue-200', 
} = Astro.props;
---
<astro-modal>
  <button class={`${classes} ${colors} px-4 md:px-6 py-3 min-w-20 rounded-lg flex justify-center items-center`}>
    {icon && <Icon name={icon} class="text-lg" /> }
    {openText && openText}
  </button>
  
  <dialog class="rounded-lg p-5">
  
  <slot name="main" />
  <form method="dialog">
    <slot name="close"/>
  </form>
  </dialog>
</astro-modal>


<script>
  class Modal extends HTMLElement {
    connectedCallback() {
      const button = this.querySelector('button');
      const dialog = this.querySelector('dialog');
      
      if (dialog) {
        dialog.addEventListener('click', event => {
          if (event.target === dialog) {
            dialog.close();
          }
        });

        dialog.addEventListener('close', () => {
          document.body.classList.remove('lock-scroll'); 
        });
      }
      
      if (button) {
        button?.addEventListener('click', () => {
          if (dialog) {
            dialog.showModal();
            document.body.classList.add('lock-scroll');
          }
        });
      }
    }
  }

  customElements.define('astro-modal', Modal);
</script>

<style is:global>
  astro-modal dialog::backdrop {
    background: rgba(81, 66, 66, 0.1);
  }

  .lock-scroll {
    overflow: hidden;
  }
</style>